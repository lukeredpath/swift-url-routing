{"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/parse(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/ParserPrinter-Implementations"],"generated":true}],"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/OneOfBuilder"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/oneofbuilder\/optionaloneof"]}],"abstract":[{"text":"A parser that parses output from an optional parser.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalOneOf","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Wrapped","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"You won’t typically construct this parser directly, but instead will use standard ","type":"text"},{"code":"if","type":"codeVoice"},{"text":" ","type":"text"},{"text":"statements in a ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/OneOfBuilder","isActive":true,"type":"reference"},{"text":" block to automatically build optional parsers:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let whitespace = OneOf {","  if shouldParseNewlines {","    \"\\r\\n\"","    \"\\r\"","    \"\\n\"","  }","","  \" \"","  \"\\t\"","}"]}],"kind":"content"}],"metadata":{"title":"OneOfBuilder.OptionalOneOf","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalOneOf","kind":"identifier"}],"roleHeading":"Structure","role":"symbol","navigatorTitle":[{"text":"OptionalOneOf","kind":"identifier"}],"modules":[{"name":"Parsing"}],"externalID":"s:7Parsing12OneOfBuilderO08OptionalbC0V","symbolKind":"struct"},"references":{"doc://co.pointfree.URLRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","abstract":[],"url":"\/documentation\/parsing","type":"topic","kind":"symbol","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"abstract":[{"type":"text","text":"A "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"conformance":{"constraints":[{"type":"codeVoice","code":"Wrapped"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ParserPrinter"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/parsing\/parserprinter","kind":"symbol","title":"ParserPrinter","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/OneOfBuilder":{"role":"symbol","title":"OneOfBuilder","type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfBuilder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/OneOfBuilder","url":"\/documentation\/parsing\/oneofbuilder","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs each parser in the closure, one after another, till one succeeds with an output."}],"navigatorTitle":[{"text":"OneOfBuilder","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/OneOfBuilder/OptionalOneOf/parse(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/parse(_:)","title":"parse(_:)","url":"\/documentation\/parsing\/oneofbuilder\/optionaloneof\/parse(_:)","kind":"symbol","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"type":"topic","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/OneOfBuilder/OptionalOneOf/Parser-Implementations":{"url":"\/documentation\/parsing\/oneofbuilder\/optionaloneof\/parser-implementations","abstract":[],"kind":"article","title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/Parser-Implementations","type":"topic","role":"collectionGroup"},"doc://co.pointfree.URLRouting/documentation/Parsing/OneOfBuilder/OptionalOneOf/ParserPrinter-Implementations":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/oneofbuilder\/optionaloneof\/parserprinter-implementations","type":"topic","kind":"article","role":"collectionGroup","title":"ParserPrinter Implementations","abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/OneOfBuilder/OptionalOneOf":{"abstract":[{"text":"A parser that parses output from an optional parser.","type":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/oneofbuilder\/optionaloneof","role":"symbol","title":"OneOfBuilder.OptionalOneOf","navigatorTitle":[{"text":"OptionalOneOf","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalOneOf","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"role":"symbol"}}}