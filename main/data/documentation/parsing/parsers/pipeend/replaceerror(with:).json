{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"output","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"ReplaceError","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/ReplaceError","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser that never fails."}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"An output to return should the upstream parser fail."}],"type":"paragraph"}],"name":"output"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"text":"Useful for providing a default output for a parser.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, we could create a parser that parses a plus or minus sign and maps the result to"},{"type":"text","text":" "},{"type":"text","text":"a positive or negative multiplier respectively, or else defaults to a positive multiplier:"}],"type":"paragraph"},{"code":["let sign = OneOf {","  \"+\".map { 1 }","  \"-\".map { -1 }","}",".replaceError(with: 1)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Notably this parser is non-throwing:","type":"text"}]},{"code":["var input = \"-123\"[...]","","\/\/ No `try` required:","sign.parse(&input)  \/\/ -1","input               \/\/ \"123\"","","\/\/ Simply returns the default when parsing fails:","sign.parse(&input)  \/\/ 1"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This means it can be used to turn throwing parsers into non-throwing ones, which is important"},{"type":"text","text":" "},{"type":"text","text":"for building up complex parsers that cannot fail."}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/PipeEnd\/replaceError(with:)"},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/PipeEnd","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/PipeEnd\/Parser-Implementations"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"variants":[{"paths":["\/documentation\/parsing\/parsers\/pipeend\/replaceerror(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:7Parsing6ParserPAAE12replaceError4withAA7ParsersO07ReplaceD0Vy_xG6OutputQz_tF::SYNTHESIZED::s:7Parsing7ParsersO7PipeEndV","extendedModule":"Parsing","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"ReplaceError","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","title":"replaceError(with:)","symbolKind":"method","modules":[{"name":"Parsing"}]},"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/PipeEnd/replaceError(with:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/PipeEnd\/replaceError(with:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"url":"\/documentation\/parsing\/parsers\/pipeend\/replaceerror(with:)","kind":"symbol","title":"replaceError(with:)"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","abstract":[],"url":"\/documentation\/parsing","type":"topic","kind":"symbol","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/PipeEnd":{"abstract":[],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PipeEnd"}],"navigatorTitle":[{"kind":"identifier","text":"PipeEnd"}],"url":"\/documentation\/parsing\/parsers\/pipeend","title":"Parsers.PipeEnd","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/PipeEnd"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"url":"\/documentation\/parsing\/parsers","kind":"symbol","title":"Parsers","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/ReplaceError":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReplaceError"}],"navigatorTitle":[{"kind":"identifier","text":"ReplaceError"}],"abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"url":"\/documentation\/parsing\/parsers\/replaceerror","kind":"symbol","title":"Parsers.ReplaceError","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/ReplaceError","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/PipeEnd/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/PipeEnd\/Parser-Implementations","abstract":[],"type":"topic","role":"collectionGroup","title":"Parser Implementations","kind":"article","url":"\/documentation\/parsing\/parsers\/pipeend\/parser-implementations"}}}