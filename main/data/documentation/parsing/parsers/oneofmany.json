{"sections":[],"abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOfMany"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Parsers"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP","text":"Parser"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You will not typically need to interact with this type directly. Instead you will usually loop"},{"type":"text","text":" "},{"text":"over each parser in a builder block:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["enum Role: String, CaseIterable {","  case admin","  case guest","  case member","}","","let roleParser = OneOf {","  for role in Role.allCases {","    status.rawValue.map { role }","  }","}"]}]}],"metadata":{"extendedModule":"Parsing","modules":[{"name":"Parsing"}],"roleHeading":"Structure","externalID":"s:7Parsing7ParsersO9OneOfManyV","navigatorTitle":[{"kind":"identifier","text":"OneOfMany"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOfMany"}],"symbolKind":"struct","title":"Parsers.OneOfMany","role":"symbol"},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/parsers"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/ParserPrinter-Implementations"],"title":"Default Implementations"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/oneofmany"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers"]]},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OneOfMany"},"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"url":"\/documentation\/parsing\/parsers","kind":"symbol","title":"Parsers","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/OneOfMany":{"kind":"symbol","title":"Parsers.OneOfMany","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OneOfMany","navigatorTitle":[{"text":"OneOfMany","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfMany","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/oneofmany"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","abstract":[],"url":"\/documentation\/parsing","type":"topic","kind":"symbol","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/OneOfMany/init(_:)":{"url":"\/documentation\/parsing\/parsers\/oneofmany\/init(_:)","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"([","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/init(_:)","title":"init(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/OneOfMany/ParserPrinter-Implementations":{"kind":"article","title":"ParserPrinter Implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/ParserPrinter-Implementations","type":"topic","role":"collectionGroup","abstract":[],"url":"\/documentation\/parsing\/parsers\/oneofmany\/parserprinter-implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/OneOfMany/parse(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"type":"topic","title":"parse(_:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/parse(_:)","role":"symbol","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/oneofmany\/parse(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"title":"ParserPrinter","url":"\/documentation\/parsing\/parserprinter","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Parsers"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"abstract":[{"type":"text","text":"A "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","type":"reference","isActive":true},{"type":"text","text":" that can incrementally “print” an output value back into an input."}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/OneOfMany/parsers":{"url":"\/documentation\/parsing\/parsers\/oneofmany\/parsers","abstract":[],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parsers","kind":"identifier"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"]"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/parsers","title":"parsers"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/OneOfMany/Parser-Implementations":{"role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/Parser-Implementations","title":"Parser Implementations","type":"topic","url":"\/documentation\/parsing\/parsers\/oneofmany\/parser-implementations"}}}