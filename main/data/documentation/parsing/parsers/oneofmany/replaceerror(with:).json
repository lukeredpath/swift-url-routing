{"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OneOfMany","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/Parser-Implementations"]]},"variants":[{"paths":["\/documentation\/parsing\/parsers\/oneofmany\/replaceerror(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"output","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/ReplaceError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["Linux"]}]},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"A parser that never fails."}],"type":"paragraph"}],"kind":"content"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"An output to return should the upstream parser fail."}],"type":"paragraph"}],"name":"output"}],"kind":"parameters"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Useful for providing a default output for a parser."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, we could create a parser that parses a plus or minus sign and maps the result to"},{"type":"text","text":" "},{"type":"text","text":"a positive or negative multiplier respectively, or else defaults to a positive multiplier:"}],"type":"paragraph"},{"syntax":"swift","code":["let sign = OneOf {","  \"+\".map { 1 }","  \"-\".map { -1 }","}",".replaceError(with: 1)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Notably this parser is non-throwing:"}],"type":"paragraph"},{"syntax":"swift","code":["var input = \"-123\"[...]","","\/\/ No `try` required:","sign.parse(&input)  \/\/ -1","input               \/\/ \"123\"","","\/\/ Simply returns the default when parsing fails:","sign.parse(&input)  \/\/ 1"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"This means it can be used to turn throwing parsers into non-throwing ones, which is important"},{"type":"text","text":" "},{"type":"text","text":"for building up complex parsers that cannot fail."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"symbolKind":"method","title":"replaceError(with:)","role":"symbol","modules":[{"name":"Parsing"}],"extendedModule":"Parsing","externalID":"s:7Parsing6ParserPAAE12replaceError4withAA7ParsersO07ReplaceD0Vy_xG6OutputQz_tF::SYNTHESIZED::s:7Parsing7ParsersO9OneOfManyV","roleHeading":"Instance Method"},"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/replaceError(with:)","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/ReplaceError":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReplaceError"}],"navigatorTitle":[{"kind":"identifier","text":"ReplaceError"}],"abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"url":"\/documentation\/parsing\/parsers\/replaceerror","kind":"symbol","title":"Parsers.ReplaceError","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/ReplaceError","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/OneOfMany/Parser-Implementations":{"role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/Parser-Implementations","title":"Parser Implementations","type":"topic","url":"\/documentation\/parsing\/parsers\/oneofmany\/parser-implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","abstract":[],"url":"\/documentation\/parsing","type":"topic","kind":"symbol","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/OneOfMany/replaceError(with:)":{"role":"symbol","kind":"symbol","abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OneOfMany\/replaceError(with:)","title":"replaceError(with:)","type":"topic","url":"\/documentation\/parsing\/parsers\/oneofmany\/replaceerror(with:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"url":"\/documentation\/parsing\/parsers","kind":"symbol","title":"Parsers","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/OneOfMany":{"kind":"symbol","title":"Parsers.OneOfMany","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/OneOfMany","navigatorTitle":[{"text":"OneOfMany","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfMany","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/oneofmany"}}}