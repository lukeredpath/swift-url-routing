{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"input","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"StringProtocol","kind":"typeIdentifier","preciseIdentifier":"s:Sy"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UTF8View","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"inlineContent":[{"text":"A more well-structured value parsed from the given input.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"parameters":[{"name":"input","content":[{"type":"paragraph","inlineContent":[{"text":"A nebulous collection of data to be parsed.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"Rather than having to create a mutable UTF-8 value and feed it to the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-76tcw","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"method like this:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["var input = \"123,true\"[...].utf8","let output = try Parse {","  Int.parser()","  \",\".utf8","  Bool.parser()","}",".parse(&input) \/\/ (123, true)"]},{"inlineContent":[{"type":"text","text":"You can just feed a plain "},{"type":"codeVoice","code":"String"},{"type":"text","text":" input directly:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let output = try Parse {","  Int.parser()","  \",\".utf8","  Bool.parser()","}",".parse(\"123,true\") \/\/ (123, true)"]},{"inlineContent":[{"text":"This method will fail if the parser does not consume the entirety of the input.","type":"text"},{"text":" ","type":"text"},{"text":"For example:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let output = try Parse {","  Int.parser()","  \",\".utf8","  Bool.parser()","}",".parse(\"123,true    \")","","\/\/ error: unexpected input","\/\/  --> input:1:9","\/\/ 1 | 123,true␣␣␣␣","\/\/   |         ^ expected end of input"]},{"content":[{"inlineContent":[{"text":"If your input can have trailing whitespace that you would like to consume and discard","type":"text"},{"text":" ","type":"text"},{"text":"you can do so like this:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let output = try Parse {"," Int.parser()"," \",\".utf8"," Bool.parser()"," Whitespace()","}",".parse(\"123,true    \") \/\/ (123, true)"]}],"style":"tip","type":"aside"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"roleHeading":"Instance Method","title":"parse(_:)","role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Output"}],"extendedModule":"Parsing","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing6ParserPAAE5parsey6OutputQzqd__KSyRd__11SubSequence_8UTF8ViewQYd__5InputRtzlF"},"abstract":[{"type":"text","text":"Parse a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" into an output using a UTF-8 parser. This method is more ergnomic to use"},{"type":"text","text":" "},{"type":"text","text":"than "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-76tcw"},{"type":"text","text":" because it accepts a plain string rather than a collection of"},{"type":"text","text":" "},{"type":"text","text":"UTF-8 code units, and the input does not need to be "},{"type":"codeVoice","code":"inout"},{"type":"text","text":"."}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-2wzcq"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-76tcw"]]},"variants":[{"paths":["\/documentation\/parsing\/parser\/parse(_:)-2wzcq"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser/parse(_:)-2wzcq":{"type":"topic","role":"symbol","kind":"symbol","title":"parse(_:)","url":"\/documentation\/parsing\/parser\/parse(_:)-2wzcq","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-2wzcq","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"abstract":[{"text":"Parse a ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" into an output using a UTF-8 parser. This method is more ergnomic to use","type":"text"},{"text":" ","type":"text"},{"text":"than ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-76tcw"},{"type":"text","text":" because it accepts a plain string rather than a collection of"},{"type":"text","text":" "},{"type":"text","text":"UTF-8 code units, and the input does not need to be "},{"type":"codeVoice","code":"inout"},{"type":"text","text":"."}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser/parse(_:)-76tcw":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-76tcw","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"url":"\/documentation\/parsing\/parser\/parse(_:)-76tcw","defaultImplementations":3,"required":true,"title":"parse(_:)","type":"topic","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","abstract":[],"url":"\/documentation\/parsing","type":"topic","kind":"symbol","role":"collection","title":"Parsing"}}}