{"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/init()-2egll","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/init()-7gmzt","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/init()-8lvil"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/parse(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/print(_:into:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/ParserPrinter-Implementations"],"generated":true}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/end"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Collection","preciseIdentifier":"s:Sl"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Useful as a final parser in a long sequence of parsers to guarantee that all input has been"},{"type":"text","text":" "},{"type":"text","text":"consumed, especially as "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Many","type":"reference","isActive":true},{"type":"text","text":"’s terminal parser."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This parser will fail if there are input elements that have not been consumed:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["input = \"Hello, Blob!!\"","try parser.parse(&input)","\/\/ error: unexpected input","\/\/  --> input:1:13","\/\/ 1 | Hello, Blob!!","\/\/   |             ^ expected end of input"]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This parser is automatically inserted when you invoke the non-incremental"},{"type":"text","text":" "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-6h1d0","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-2wzcq","isActive":true,"type":"reference"},{"type":"text","text":" methods."}]}],"type":"aside","style":"note"}]}],"metadata":{"externalID":"s:7Parsing3EndV","navigatorTitle":[{"kind":"identifier","text":"End"}],"title":"End","roleHeading":"Structure","modules":[{"name":"Parsing"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"}],"symbolKind":"struct","role":"symbol"},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"kind":"relationships","type":"conformsTo"}],"abstract":[{"text":"A parser that succeeds if the input is empty, and fails otherwise.","type":"text"}],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"title":"ParserPrinter","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/parserprinter","abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/End/Parser-Implementations":{"type":"topic","title":"Parser Implementations","kind":"article","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/Parser-Implementations","url":"\/documentation\/parsing\/end\/parser-implementations","role":"collectionGroup","abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser/parse(_:)-6h1d0":{"kind":"symbol","abstract":[{"text":"Parse a collection into an output using a parser that works on the collection’s ","type":"text"},{"type":"codeVoice","code":"SubSequence"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"This method is more ergnomic to use than ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-76tcw","isActive":true,"type":"reference"},{"text":" because it accepts a","type":"text"},{"text":" ","type":"text"},{"text":"collection directly rather than its subsequence, and the input does not need to be ","type":"text"},{"code":"inout","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","title":"parse(_:)","url":"\/documentation\/parsing\/parser\/parse(_:)-6h1d0","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-6h1d0"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser/parse(_:)-76tcw":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-76tcw","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"url":"\/documentation\/parsing\/parser\/parse(_:)-76tcw","defaultImplementations":3,"required":true,"title":"parse(_:)","type":"topic","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","abstract":[],"url":"\/documentation\/parsing","type":"topic","kind":"symbol","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/End/init()-7gmzt":{"kind":"symbol","role":"symbol","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","url":"\/documentation\/parsing\/end\/init()-7gmzt","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/init()-7gmzt"},"doc://co.pointfree.URLRouting/documentation/Parsing/End":{"title":"End","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End","navigatorTitle":[{"text":"End","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/end","type":"topic","abstract":[{"text":"A parser that succeeds if the input is empty, and fails otherwise.","type":"text"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/End/parse(_:)":{"url":"\/documentation\/parsing\/end\/parse(_:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/parse(_:)","title":"parse(_:)","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/End/init()-2egll":{"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","url":"\/documentation\/parsing\/end\/init()-2egll","title":"init()","type":"topic","role":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/init()-2egll","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser/parse(_:)-2wzcq":{"type":"topic","role":"symbol","kind":"symbol","title":"parse(_:)","url":"\/documentation\/parsing\/parser\/parse(_:)-2wzcq","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-2wzcq","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"abstract":[{"text":"Parse a ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" into an output using a UTF-8 parser. This method is more ergnomic to use","type":"text"},{"text":" ","type":"text"},{"text":"than ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-76tcw"},{"type":"text","text":" because it accepts a plain string rather than a collection of"},{"type":"text","text":" "},{"type":"text","text":"UTF-8 code units, and the input does not need to be "},{"type":"codeVoice","code":"inout"},{"type":"text","text":"."}]},"doc://co.pointfree.URLRouting/documentation/Parsing/End/init()-8lvil":{"title":"init()","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","url":"\/documentation\/parsing\/end\/init()-8lvil","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/init()-8lvil"},"doc://co.pointfree.URLRouting/documentation/Parsing/End/ParserPrinter-Implementations":{"type":"topic","kind":"article","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/end\/parserprinter-implementations","abstract":[],"title":"ParserPrinter Implementations","role":"collectionGroup"},"doc://co.pointfree.URLRouting/documentation/Parsing/Many":{"type":"topic","abstract":[{"text":"A parser that attempts to run another parser as many times as specified, accumulating the result","type":"text"},{"text":" ","type":"text"},{"text":"of the outputs.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Many","kind":"symbol","title":"Many","role":"symbol","url":"\/documentation\/parsing\/many","navigatorTitle":[{"text":"Many","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/End/print(_:into:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"((), ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/end\/print(_:into:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/print(_:into:)","abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"title":"print(_:into:)"}}}