{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StartsWith","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","kind":"typeIdentifier","preciseIdentifier":"s:Sl"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This parser is named after "},{"code":"Sequence.starts(with:)","type":"codeVoice"},{"type":"text","text":", and tests that the input it is parsing"},{"type":"text","text":" "},{"type":"text","text":"starts with a given subsequence by calling this method under the hood."}],"type":"paragraph"},{"inlineContent":[{"text":"If ","type":"text"},{"code":"true","type":"codeVoice"},{"text":", it consumes this prefix and returns ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["var input = \"Hello, Blob!\"[...]","","StartsWith(\"Hello, \").parse(&input)  \/\/ ()","input                                \/\/ \"Blob!\""],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"If "},{"code":"false","type":"codeVoice"},{"type":"text","text":", it fails and leaves input intact:"}],"type":"paragraph"},{"code":["var input = \"Goodnight, Blob!\"[...]","try StartsWith(\"Hello, \").parse(&input)","\/\/ error: unexpected input","\/\/  --> input:1:1","\/\/ 1 | Goodnight, Blob!","\/\/   | ^ expected \"Hello, \""],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"This parser returns "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" and "},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" the sequence of elements it consumes because the sequence"},{"type":"text","text":" "},{"type":"text","text":"is already known at the time the parser is created (it is the value quite literally passed to"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/init(_:)"},{"type":"text","text":")."}],"type":"paragraph"},{"inlineContent":[{"text":"In many circumstances you can omit the ","type":"text"},{"code":"StartsWith","type":"codeVoice"},{"text":" parser entirely and just use the collection","type":"text"},{"text":" ","type":"text"},{"text":"as the parser. For example:","type":"text"}],"type":"paragraph"},{"code":["var input = \"Hello, Blob!\"[...]","","try \"Hello, \".parse(&input)  \/\/ ()","input                        \/\/ \"Blob!\""],"syntax":"swift","type":"codeListing"}]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/init(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/init(_:by:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/count","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/possiblePrefix","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/startsWith"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/ParserPrinter-Implementations"],"title":"Default Implementations","generated":true}],"metadata":{"navigatorTitle":[{"text":"StartsWith","kind":"identifier"}],"role":"symbol","modules":[{"name":"Parsing"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StartsWith","kind":"identifier"}],"externalID":"s:7Parsing10StartsWithV","symbolKind":"struct","title":"StartsWith","roleHeading":"Structure"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/parsing\/startswith"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo","title":"Conforms To"}],"abstract":[{"type":"text","text":"A parser that parses a sequence of elements from its input."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/StartsWith":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StartsWith"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith","abstract":[{"type":"text","text":"A parser that parses a sequence of elements from its input."}],"url":"\/documentation\/parsing\/startswith","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StartsWith"}],"title":"StartsWith"},"doc://co.pointfree.URLRouting/documentation/Parsing/StartsWith/init(_:)":{"role":"symbol","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Input.Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"Initializes a parser that successfully returns "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" when the initial elements of its input"},{"type":"text","text":" "},{"type":"text","text":"are equivalent to the elements in another sequence."}],"title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"PossiblePrefix"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/init(_:)","type":"topic","url":"\/documentation\/parsing\/startswith\/init(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/StartsWith/startsWith":{"title":"startsWith","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/startsWith","kind":"symbol","url":"\/documentation\/parsing\/startswith\/startswith","abstract":[],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"startsWith"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/StartsWith/ParserPrinter-Implementations":{"title":"ParserPrinter Implementations","kind":"article","url":"\/documentation\/parsing\/startswith\/parserprinter-implementations","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/ParserPrinter-Implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/StartsWith/init(_:by:)":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/init(_:by:)","abstract":[{"type":"text","text":"Initializes a parser that successfully returns "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" when the initial elements of its input"},{"type":"text","text":" "},{"text":"are equivalent to the elements in another sequence, using the given predicate as the","type":"text"},{"text":" ","type":"text"},{"text":"equivalence test.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/startswith\/init(_:by:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"PossiblePrefix"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"kind":"text","text":", "},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:by:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/StartsWith/parse(_:)":{"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"url":"\/documentation\/parsing\/startswith\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/parse(_:)","role":"symbol","kind":"symbol","type":"topic","title":"parse(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/StartsWith/possiblePrefix":{"role":"symbol","url":"\/documentation\/parsing\/startswith\/possibleprefix","type":"topic","title":"possiblePrefix","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/possiblePrefix","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"possiblePrefix"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s13AnyCollectionV","text":"AnyCollection"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"type":"topic","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"PrependableCollection","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Input.SubSequence","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","url":"\/documentation\/parsing\/parserprinter","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"title":"ParserPrinter"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","abstract":[],"url":"\/documentation\/parsing","type":"topic","kind":"symbol","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/StartsWith/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/Parser-Implementations","abstract":[],"url":"\/documentation\/parsing\/startswith\/parser-implementations","kind":"article","type":"topic","role":"collectionGroup","title":"Parser Implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/StartsWith/count":{"abstract":[],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/StartsWith\/count","type":"topic","kind":"symbol","title":"count","url":"\/documentation\/parsing\/startswith\/count","role":"symbol"}}}