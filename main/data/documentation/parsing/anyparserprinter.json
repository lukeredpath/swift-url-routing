{"metadata":{"modules":[{"name":"Parsing"}],"title":"AnyParserPrinter","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParserPrinter"}],"roleHeading":"Structure","symbolKind":"struct","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyParserPrinter"}],"externalID":"s:7Parsing16AnyParserPrinterV"},"abstract":[{"text":"A type-erased parser-printer of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":".","type":"text"}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo"}],"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter\/init(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter\/init(parse:print:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter\/print(_:into:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter\/ParserPrinter-Implementations"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/anyparserprinter"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParserPrinter","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">","kind":"text"}],"platforms":["Linux"]}]},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"text":"This parser-printer forwards its ","type":"text"},{"type":"codeVoice","code":"parse(_:)"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"print(_:to:)"},{"text":" methods to an arbitrary","type":"text"},{"type":"text","text":" "},{"type":"text","text":"underlying parser-printer having the same "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" types, hiding the specifics of"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"Use ","type":"text"},{"code":"AnyParserPrinter","type":"codeVoice"},{"text":" to wrap a parser whose type has details you don’t want to expose across","type":"text"},{"text":" ","type":"text"},{"text":"API boundaries, such as different modules. When you use type erasure this way, you can change","type":"text"},{"text":" ","type":"text"},{"text":"the underlying parser over time without affecting existing clients.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/AnyParserPrinter/init(parse:print:)":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter\/init(parse:print:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"parse","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"print","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","title":"init(parse:print:)","role":"symbol","url":"\/documentation\/parsing\/anyparserprinter\/init(parse:print:)","abstract":[{"text":"Creates a parser-printer that wraps the given closures in its ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)","isActive":true,"type":"reference"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"print(_:to:)"},{"text":" methods.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyParserPrinter/init(_:)":{"abstract":[{"text":"Creates a type-erasing parser-printer to wrap the given parser-printer.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter\/init(_:)","title":"init(_:)","url":"\/documentation\/parsing\/anyparserprinter\/init(_:)","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyParserPrinter/Parser-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","title":"Parser Implementations","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter\/Parser-Implementations","url":"\/documentation\/parsing\/anyparserprinter\/parser-implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyParserPrinter/print(_:into:)":{"role":"symbol","title":"print(_:into:)","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter\/print(_:into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"url":"\/documentation\/parsing\/anyparserprinter\/print(_:into:)","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"title":"ParserPrinter","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/parserprinter","abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","abstract":[],"url":"\/documentation\/parsing","type":"topic","kind":"symbol","role":"collection","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyParserPrinter":{"navigatorTitle":[{"text":"AnyParserPrinter","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/anyparserprinter","title":"AnyParserPrinter","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParserPrinter","kind":"identifier"}],"abstract":[{"text":"A type-erased parser-printer of ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" from ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":".","type":"text"}],"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyParserPrinter/ParserPrinter-Implementations":{"title":"ParserPrinter Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/anyparserprinter\/parserprinter-implementations","kind":"article","role":"collectionGroup","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyParserPrinter/parse(_:)":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"type":"topic","title":"parse(_:)","role":"symbol","url":"\/documentation\/parsing\/anyparserprinter\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"kind":"symbol"}}}