{"metadata":{"title":"init(while:)","externalID":"s:7Parsing6PrefixV5whileACyxGSb7ElementQzc_tcfc","role":"symbol","roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"modules":[{"name":"Parsing"}],"symbolKind":"init"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"length","content":[{"inlineContent":[{"text":"A length that provides a minimum number and maximum of elements to consume for","type":"text"},{"text":" ","type":"text"},{"text":"parsing to be considered successful.","type":"text"}],"type":"paragraph"}]},{"name":"predicate","content":[{"inlineContent":[{"text":"An closure that takes an element of the input sequence as its argument and","type":"text"},{"text":" ","type":"text"},{"text":"returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if the element should be included or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" if it should be excluded. Once","type":"text"},{"text":" ","type":"text"},{"text":"the predicate returns ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" it will not be called again.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"codeListing","syntax":"swift","code":["try Prefix { $0.isNumber }.parse(\"123456\")  \/\/ \"123456\""]}],"kind":"content"}],"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/prefix\/init(while:)-8u42b"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Prefix"]]},"abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Prefix\/init(while:)-8u42b","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Prefix":{"url":"\/documentation\/parsing\/prefix","type":"topic","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Prefix","title":"Prefix","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Prefix/init(while:)-8u42b":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Prefix\/init(while:)-8u42b","role":"symbol","title":"init(while:)","type":"topic","abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/prefix\/init(while:)-8u42b"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","abstract":[],"url":"\/documentation\/parsing","type":"topic","kind":"symbol","role":"collection","title":"Parsing"}}}