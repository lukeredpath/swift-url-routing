{"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVVV","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVVV\/ParserPrinter-Implementations"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Attempts to print a nebulous piece of data.","type":"text"}],"sections":[],"metadata":{"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"symbolKind":"method","title":"print()","externalID":"s:7Parsing13ParserPrinterPA2A19_EmptyInitializable5InputRpzyt6OutputRtzrlE5printAFyKF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B8ZipVOVVVV","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"_EmptyInitializable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"extendedModule":"Parsing","role":"symbol","modules":[{"name":"URLRouting"}]},"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVVV\/print()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/print()"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A nebulous value.","type":"text"}]}],"kind":"content"}],"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOVVV/ParserPrinter-Implementations":{"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/parserprinter-implementations","abstract":[],"type":"topic","title":"ParserPrinter Implementations","kind":"article","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVVV\/ParserPrinter-Implementations","role":"collectionGroup"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOVVV":{"navigatorTitle":[{"text":"PathZipVOVVV","kind":"identifier"}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv","abstract":[],"type":"topic","title":"PathBuilder.PathZipVOVVV","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVVV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipVOVVV","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathBuilder"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A custom parameter attribute that constructs path component parsers from closures. The","type":"text"},{"text":" ","type":"text"},{"text":"constructed parser runs a number of parsers against each patch component, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and accumulates their outputs.","type":"text"}],"url":"\/documentation\/urlrouting\/pathbuilder","title":"PathBuilder","navigatorTitle":[{"kind":"identifier","text":"PathBuilder"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder"},"http://github.com/pointfreeco/swift-parsing":{"type":"link","titleInlineContent":[{"text":"Parsing","type":"text"}],"title":"Parsing","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","url":"http:\/\/github.com\/pointfreeco\/swift-parsing"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"type":"topic","kind":"symbol","role":"collection","abstract":[{"text":"A bidirectional URL router with more type safety and less fuss. This library is built with ","type":"text"},{"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","isActive":true,"type":"reference"},{"text":".","type":"text"}],"url":"\/documentation\/urlrouting","title":"URLRouting","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVOVVV/print()":{"type":"topic","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvovvv\/print()","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_EmptyInitializable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVOVVV\/print()","abstract":[{"text":"Attempts to print a nebulous piece of data.","type":"text"}],"title":"print()","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}]}}}