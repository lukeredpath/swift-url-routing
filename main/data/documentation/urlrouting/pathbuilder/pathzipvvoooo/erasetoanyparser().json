{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVOOOO\/eraseToAnyParser()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/erasetoanyparser()"]}],"abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVOOOO","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVOOOO\/Parser-Implementations"]]},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"text":"An ","type":"text"},{"code":"AnyParser","type":"codeVoice"},{"text":" wrapping this parser.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This form of ","type":"text"},{"inlineContent":[{"type":"text","text":"type erasure"}],"type":"emphasis"},{"text":" preserves abstraction across API boundaries, such as different","type":"text"},{"text":" ","type":"text"},{"text":"modules.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"When you expose your composed parsers as the ","type":"text"},{"code":"AnyParser","type":"codeVoice"},{"text":" type, you can change the underlying","type":"text"},{"text":" ","type":"text"},{"text":"implementation over time without affecting existing clients.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Equivalent to passing ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"AnyParser.init","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"Parsing","title":"eraseToAnyParser()","roleHeading":"Instance Method","modules":[{"name":"URLRouting"}],"symbolKind":"method","externalID":"s:7Parsing6ParserPAAE010eraseToAnyB0AA0eB0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B9ZipVVOOOOV"},"sections":[],"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVOOOO/eraseToAnyParser()":{"abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVOOOO\/eraseToAnyParser()","type":"topic","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/erasetoanyparser()","role":"symbol","title":"eraseToAnyParser()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"type":"topic","kind":"symbol","role":"collection","abstract":[{"text":"A bidirectional URL router with more type safety and less fuss. This library is built with ","type":"text"},{"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","isActive":true,"type":"reference"},{"text":".","type":"text"}],"url":"\/documentation\/urlrouting","title":"URLRouting","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting"},"http://github.com/pointfreeco/swift-parsing":{"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","url":"http:\/\/github.com\/pointfreeco\/swift-parsing","title":"Parsing","titleInlineContent":[{"text":"Parsing","type":"text"}],"type":"link"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyParser":{"abstract":[{"type":"text","text":"A type-erased parser of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"title":"AnyParser","type":"topic","url":"\/documentation\/parsing\/anyparser","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParser","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVOOOO":{"role":"symbol","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"PathZipVVOOOO","kind":"identifier"}],"title":"PathBuilder.PathZipVVOOOO","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVOOOO","navigatorTitle":[{"text":"PathZipVVOOOO","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathBuilder"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A custom parameter attribute that constructs path component parsers from closures. The","type":"text"},{"text":" ","type":"text"},{"text":"constructed parser runs a number of parsers against each patch component, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and accumulates their outputs.","type":"text"}],"url":"\/documentation\/urlrouting\/pathbuilder","title":"PathBuilder","navigatorTitle":[{"kind":"identifier","text":"PathBuilder"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVOOOO/Parser-Implementations":{"role":"collectionGroup","kind":"article","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoooo\/parser-implementations","abstract":[],"type":"topic","title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVOOOO\/Parser-Implementations"}}}