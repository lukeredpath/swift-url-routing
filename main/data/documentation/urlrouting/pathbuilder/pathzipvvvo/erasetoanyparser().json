{"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVO","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVO\/Parser-Implementations"]]},"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVO\/eraseToAnyParser()","interfaceLanguage":"swift"},"sections":[],"variants":[{"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/erasetoanyparser()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"symbolKind":"method","title":"eraseToAnyParser()","modules":[{"name":"URLRouting"}],"roleHeading":"Instance Method","extendedModule":"Parsing","externalID":"s:7Parsing6ParserPAAE010eraseToAnyB0AA0eB0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B7ZipVVVOV"},"abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParser","text":"AnyParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"AnyParser"},{"text":" wrapping this parser.","type":"text"}]}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This form of "},{"type":"emphasis","inlineContent":[{"type":"text","text":"type erasure"}]},{"type":"text","text":" preserves abstraction across API boundaries, such as different"},{"type":"text","text":" "},{"type":"text","text":"modules."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"When you expose your composed parsers as the "},{"type":"codeVoice","code":"AnyParser"},{"type":"text","text":" type, you can change the underlying"},{"type":"text","text":" "},{"type":"text","text":"implementation over time without affecting existing clients."}],"type":"paragraph"},{"inlineContent":[{"text":"Equivalent to passing ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"AnyParser.init","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVVO/Parser-Implementations":{"abstract":[],"type":"topic","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/parser-implementations","title":"Parser Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVO\/Parser-Implementations","kind":"article"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"type":"topic","kind":"symbol","role":"collection","abstract":[{"text":"A bidirectional URL router with more type safety and less fuss. This library is built with ","type":"text"},{"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","isActive":true,"type":"reference"},{"text":".","type":"text"}],"url":"\/documentation\/urlrouting","title":"URLRouting","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVVO":{"title":"PathBuilder.PathZipVVVO","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathZipVVVO"}],"abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVO","navigatorTitle":[{"kind":"identifier","text":"PathZipVVVO"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVVO/eraseToAnyParser()":{"kind":"symbol","abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVO\/eraseToAnyParser()","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvo\/erasetoanyparser()","title":"eraseToAnyParser()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier","text":"AnyParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/AnyParser":{"abstract":[{"type":"text","text":"A type-erased parser of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"title":"AnyParser","type":"topic","url":"\/documentation\/parsing\/anyparser","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParser","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}]},"http://github.com/pointfreeco/swift-parsing":{"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","url":"http:\/\/github.com\/pointfreeco\/swift-parsing","title":"Parsing","type":"link","titleInlineContent":[{"type":"text","text":"Parsing"}]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathBuilder"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A custom parameter attribute that constructs path component parsers from closures. The","type":"text"},{"text":" ","type":"text"},{"text":"constructed parser runs a number of parsers against each patch component, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and accumulates their outputs.","type":"text"}],"url":"\/documentation\/urlrouting\/pathbuilder","title":"PathBuilder","navigatorTitle":[{"kind":"identifier","text":"PathBuilder"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder"}}}