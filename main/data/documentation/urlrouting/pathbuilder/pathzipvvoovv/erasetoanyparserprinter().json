{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing16AnyParserPrinterV","text":"AnyParserPrinter","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"eraseToAnyParserPrinter()","extendedModule":"Parsing","symbolKind":"method","role":"symbol","roleHeading":"Instance Method","externalID":"s:7Parsing13ParserPrinterPAAE010eraseToAnybC0AA0fbC0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B9ZipVVOOVVV","modules":[{"name":"URLRouting"}]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVOOVV\/eraseToAnyParserPrinter()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/erasetoanyparserprinter()"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParserPrinter","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter","preciseIdentifier":"s:7Parsing16AnyParserPrinterV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AnyParserPrinter"},{"type":"text","text":" wrapping this parser-printer."}]}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"This form of ","type":"text"},{"inlineContent":[{"type":"text","text":"type erasure"}],"type":"emphasis"},{"text":" preserves abstraction across API boundaries, such as different","type":"text"},{"text":" ","type":"text"},{"text":"modules.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"When you expose your composed parser-printers as the "},{"code":"AnyParserPrinter","type":"codeVoice"},{"type":"text","text":" type, you can change"},{"type":"text","text":" "},{"type":"text","text":"the underlying implementation over time without affecting existing clients."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Equivalent to passing "},{"type":"codeVoice","code":"self"},{"type":"text","text":" to "},{"type":"codeVoice","code":"AnyParserPrinter\/init(_:)"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVOOVV","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVOOVV\/ParserPrinter-Implementations"]]},"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/AnyParserPrinter":{"navigatorTitle":[{"text":"AnyParserPrinter","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/anyparserprinter","title":"AnyParserPrinter","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/AnyParserPrinter","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParserPrinter","kind":"identifier"}],"abstract":[{"text":"A type-erased parser-printer of ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" from ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":".","type":"text"}],"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVOOVV/ParserPrinter-Implementations":{"title":"ParserPrinter Implementations","role":"collectionGroup","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/parserprinter-implementations","type":"topic","kind":"article","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVOOVV\/ParserPrinter-Implementations","abstract":[]},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"type":"topic","kind":"symbol","role":"collection","abstract":[{"text":"A bidirectional URL router with more type safety and less fuss. This library is built with ","type":"text"},{"identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","isActive":true,"type":"reference"},{"text":".","type":"text"}],"url":"\/documentation\/urlrouting","title":"URLRouting","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting"},"http://github.com/pointfreeco/swift-parsing":{"titleInlineContent":[{"text":"Parsing","type":"text"}],"title":"Parsing","url":"http:\/\/github.com\/pointfreeco\/swift-parsing","identifier":"http:\/\/github.com\/pointfreeco\/swift-parsing","type":"link"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVOOVV/eraseToAnyParserPrinter()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParserPrinter","preciseIdentifier":"s:7Parsing16AnyParserPrinterV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","title":"eraseToAnyParserPrinter()","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv\/erasetoanyparserprinter()","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVOOVV\/eraseToAnyParserPrinter()","type":"topic","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathBuilder"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A custom parameter attribute that constructs path component parsers from closures. The","type":"text"},{"text":" ","type":"text"},{"text":"constructed parser runs a number of parsers against each patch component, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and accumulates their outputs.","type":"text"}],"url":"\/documentation\/urlrouting\/pathbuilder","title":"PathBuilder","navigatorTitle":[{"kind":"identifier","text":"PathBuilder"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathBuilder/PathZipVVOOVV":{"type":"topic","role":"symbol","title":"PathBuilder.PathZipVVOOVV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PathZipVVOOVV","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVOOVV","kind":"symbol","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvoovv","abstract":[],"navigatorTitle":[{"text":"PathZipVVOOVV","kind":"identifier"}]}}}